local Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/preztel/AzureLibrary/master/uilib.lua", true))()

local AutoTab = Library:CreateTab("Troll GUI","things", true)
local Teleports = Library:CreateTab("Troll","things", true)
local Rebirths = Library:CreateTab("Troll","things", true)
local MISC = Library:CreateTab("Troll","things", true)
local credits = Library:CreateTab("Troll","things", true)


credits:CreateButton("Troll", function() --you dont need "arg" for a button
game:GetService("CoreGui").uiui:nothing()
end)

credits:CreateButton("Troll", function() --you dont need "arg" for a button
game:GetService("CoreGui").uiui:nothing()
end)

credits:CreateButton("Troll", function() --you dont need "arg" for a button
game:GetService("CoreGui").uiui:nothing()
end)

credits:CreateButton("Troll", function() --you dont need "arg" for a button
game:GetService("CoreGui").uiui:nothing()
end)

credits:CreateButton("Troll", function() --you dont need "arg" for a button
game:GetService("CoreGui").uiui:nothing()
end)

credits:CreateButton("Troll", function() --you dont need "arg" for a button
game:GetService("CoreGui").uiui:nothing()
end)

credits:CreateButton("Troll", function() --you dont need "arg" for a button
game:GetService("CoreGui").uiui:nothing()
end)


credits:CreateButton("Troll", function() --you dont need "arg" for a button
game:GetService("CoreGui").uiui:nothing()
end)


credits:CreateButton("Troll", function() --you dont need "arg" for a button
game:GetService("CoreGui").uiui:nothing()
end)


credits:CreateButton("Troll", function() --you dont need "arg" for a button
game:GetService("CoreGui").uiui:nothing()
end)


credits:CreateButton("Troll", function() --you dont need "arg" for a button
game:GetService("CoreGui").uiui:nothing()
end)


credits:CreateButton("Troll", function() --you dont need "arg" for a button
game:GetService("CoreGui").uiui:nothing()
end)


credits:CreateButton("Troll", function() --you dont need "arg" for a button
game:GetService("CoreGui").uiui:nothing()
end)
credits:CreateButton("Troll", function() --you dont need "arg" for a button
game:GetService("CoreGui").uiui:nothing()
end)

credits:CreateButton("Troll", function() --you dont need "arg" for a button
game:GetService("CoreGui").uiui:nothing()
end)

credits:CreateButton("Troll", function() --you dont need "arg" for a button
game:GetService("CoreGui").uiui:nothing()
end)
credits:CreateButton("Troll", function() --you dont need "arg" for a button
game:GetService("CoreGui").uiui:nothing()
end)
credits:CreateButton("Troll", function() --you dont need "arg" for a button
game:GetService("CoreGui").uiui:nothing()
end)
credits:CreateButton("Troll", function() --you dont need "arg" for a button
game:GetService("CoreGui").uiui:nothing()
end)

credits:CreateButton("Troll", function() --you dont need "arg" for a button
game:GetService("CoreGui").uiui:nothing()
end)
credits:CreateButton("Troll", function() --you dont need "arg" for a button
game:GetService("CoreGui").uiui:nothing()
end)
credits:CreateButton("Troll", function() --you dont need "arg" for a button
game:GetService("CoreGui").uiui:nothing()
end)

credits:CreateButton("Troll", function() --you dont need "arg" for a button
game:GetService("CoreGui").uiui:nothing()
end)
credits:CreateButton("Troll", function() --you dont need "arg" for a button
game:GetService("CoreGui").uiui:nothing()
end)

credits:CreateButton("Troll", function() --you dont need "arg" for a button
game:GetService("CoreGui").uiui:nothing()
end)
credits:CreateButton("Troll", function() --you dont need "arg" for a button
game:GetService("CoreGui").uiui:nothing()
end)
credits:CreateButton("Troll", function() --you dont need "arg" for a button
game:GetService("CoreGui").uiui:nothing()
end)
credits:CreateButton("Troll", function() --you dont need "arg" for a button
game:GetService("CoreGui").uiui:nothing()
end)
credits:CreateButton("Troll", function() --you dont need "arg" for a button
game:GetService("CoreGui").uiui:nothing()
end)
credits:CreateButton("Troll", function() --you dont need "arg" for a button
game:GetService("CoreGui").uiui:nothing()
end)

credits:CreateButton("Troll", function() --you dont need "arg" for a button
game:GetService("CoreGui").uiui:nothing()
end)
credits:CreateButton("Troll", function() --you dont need "arg" for a button
game:GetService("CoreGui").uiui:nothing()
end)
credits:CreateButton("Troll", function() --you dont need "arg" for a button
game:GetService("CoreGui").uiui:nothing()
end)
credits:CreateButton("Troll", function() --you dont need "arg" for a button
game:GetService("CoreGui").uiui:nothing()
end)
credits:CreateButton("Troll", function() --you dont need "arg" for a button
game:GetService("CoreGui").uiui:nothing()
end)
credits:CreateButton("Troll", function() --you dont need "arg" for a button
game:GetService("CoreGui").uiui:nothing()
end)
credits:CreateButton("Troll", function() --you dont need "arg" for a button
game:GetService("CoreGui").uiui:nothing()
end)
credits:CreateButton("Troll", function() --you dont need "arg" for a button
game:GetService("CoreGui").uiui:nothing()
end)credits:CreateButton("Troll", function() --you dont need "arg" for a button
game:GetService("CoreGui").uiui:nothing()
end)


AutoTab:CreateButton("Troll", function() --you dont need "arg" for a button
game:GetService("CoreGui").uiui:Destroy()
end)


MISC:CreateButton("Troll", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
_G.NO = true 
  noclip = false
game:GetService('RunService').Stepped:connect(function()
if noclip then
game.Players.LocalPlayer.Character.Humanoid:ChangeState(11)
end
end)
plr = game.Players.LocalPlayer
mouse = plr:GetMouse()
mouse.KeyDown:connect(function(key)

if key == "e" then
noclip = not noclip
game.Players.LocalPlayer.Character.Humanoid:ChangeState(11)
end
end)
print('Created by FileExplorer')
print('Credits to Peyton for the ChangeState part of this script')

         
else
_G.NO = false
end
end)

MISC:CreateToggle("Troll", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
_G.Speed = true 
        while wait() and _G.Speed do
            game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = 100
        end
    else
        _G.Speed = false
           game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = 20
         end
end)



AutoTab:CreateToggle("Troll", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.b = true 
        while wait(0) and _G.b do
           local A_1 = 1
local Event = game:GetService("ReplicatedStorage").Remotes.MultiRebirth
Event:FireServer(A_1)
        end
    else
        _G.b= false
    end
end)


AutoTab:CreateToggle("Troll", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.b = true 
        while wait(0) and _G.b do
           local A_1 = 1
local Event = game:GetService("ReplicatedStorage").Remotes.MultiRebirth
Event:FireServer(A_1)
        end
    else
        _G.b= false
    end
end)


AutoTab:CreateToggle("Troll", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.b = true 
        while wait(0) and _G.b do
           local A_1 = 1
local Event = game:GetService("ReplicatedStorage").Remotes.MultiRebirth
Event:FireServer(A_1)
        end
    else
        _G.b= false
    end
end)


AutoTab:CreateToggle("Troll", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.b = true 
        while wait(0) and _G.b do
           local A_1 = 1
local Event = game:GetService("ReplicatedStorage").Remotes.MultiRebirth
Event:FireServer(A_1)
        end
    else
        _G.b= false
    end
end)


AutoTab:CreateToggle("Troll", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.b = true 
        while wait(0) and _G.b do
           local A_1 = 1
local Event = game:GetService("ReplicatedStorage").Remotes.MultiRebirth
Event:FireServer(A_1)
        end
    else
        _G.b= false
    end
end)


AutoTab:CreateToggle("Troll", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.b = true 
        while wait(0) and _G.b do
           local A_1 = 1
local Event = game:GetService("ReplicatedStorage").Remotes.MultiRebirth
Event:FireServer(A_1)
        end
    else
        _G.b= false
    end
end)




AutoTab:CreateToggle("Troll", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.b = true 
        while wait(0) and _G.b do
           local A_1 = 1
local Event = game:GetService("ReplicatedStorage").Remotes.MultiRebirth
Event:FireServer(A_1)
        end
    else
        _G.b= false
    end
end)


AutoTab:CreateToggle("Troll", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.b = true 
        while wait(0) and _G.b do
           local A_1 = 1
local Event = game:GetService("ReplicatedStorage").Remotes.MultiRebirth
Event:FireServer(A_1)
        end
    else
        _G.b= false
    end
end)


AutoTab:CreateToggle("Troll", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.b = true 
        while wait(0) and _G.b do
           local A_1 = 1
local Event = game:GetService("ReplicatedStorage").Remotes.MultiRebirth
Event:FireServer(A_1)
        end
    else
        _G.b= false
    end
end)


AutoTab:CreateToggle("Troll", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.b = true 
        while wait(0) and _G.b do
           local A_1 = 1
local Event = game:GetService("ReplicatedStorage").Remotes.MultiRebirth
Event:FireServer(A_1)
        end
    else
        _G.b= false
    end
end)


AutoTab:CreateToggle("Troll", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.b = true 
        while wait(0) and _G.b do
           local A_1 = 1
local Event = game:GetService("ReplicatedStorage").Remotes.MultiRebirth
Event:FireServer(A_1)
        end
    else
        _G.b= false
    end
end)


AutoTab:CreateToggle("Troll", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.b = true 
        while wait(0) and _G.b do
           local A_1 = 1
local Event = game:GetService("ReplicatedStorage").Remotes.MultiRebirth
Event:FireServer(A_1)
        end
    else
        _G.b= false
    end
end)


AutoTab:CreateToggle("Troll", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.b = true 
        while wait(0) and _G.b do
           local A_1 = 1
local Event = game:GetService("ReplicatedStorage").Remotes.MultiRebirth
Event:FireServer(A_1)
        end
    else
        _G.b= false
    end
end)


AutoTab:CreateToggle("Troll", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.b = true 
        while wait(0) and _G.b do
           local A_1 = 1
local Event = game:GetService("ReplicatedStorage").Remotes.MultiRebirth
Event:FireServer(A_1)
        end
    else
        _G.b= false
    end
end)



AutoTab:CreateToggle("Troll", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.b = true 
        while wait(0) and _G.b do
           local A_1 = 1
local Event = game:GetService("ReplicatedStorage").Remotes.MultiRebirth
Event:FireServer(A_1)
        end
    else
        _G.b= false
    end
end)




AutoTab:CreateToggle("Troll", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.b = true 
        while wait(0) and _G.b do
           local A_1 = 1
local Event = game:GetService("ReplicatedStorage").Remotes.MultiRebirth
Event:FireServer(A_1)
        end
    else
        _G.b= false
    end
end)




AutoTab:CreateToggle("Troll", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.b = true 
        while wait(0) and _G.b do
           local A_1 = 1
local Event = game:GetService("ReplicatedStorage").Remotes.MultiRebirth
Event:FireServer(A_1)
        end
    else
        _G.b= false
    end
end)



AutoTab:CreateToggle("Troll", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.b = true 
        while wait(0) and _G.b do
           local A_1 = 1
local Event = game:GetService("ReplicatedStorage").Remotes.MultiRebirth
Event:FireServer(A_1)
        end
    else
        _G.b= false
    end
end)


AutoTab:CreateToggle("Troll", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.b = true 
        while wait(0) and _G.b do
           local A_1 = 1
local Event = game:GetService("ReplicatedStorage").Remotes.MultiRebirth
Event:FireServer(A_1)
        end
    else
        _G.b= false
    end
end)



AutoTab:CreateToggle("Troll", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.b = true 
        while wait(0) and _G.b do
           local A_1 = 1
local Event = game:GetService("ReplicatedStorage").Remotes.MultiRebirth
Event:FireServer(A_1)
        end
    else
        _G.b= false
    end
end)



AutoTab:CreateToggle("Troll", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.b = true 
        while wait(0) and _G.b do
           local A_1 = 1
local Event = game:GetService("ReplicatedStorage").Remotes.MultiRebirth
Event:FireServer(A_1)
        end
    else
        _G.b= false
    end
end)



AutoTab:CreateToggle("Troll", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.b = true 
        while wait(0) and _G.b do
           local A_1 = 1
local Event = game:GetService("ReplicatedStorage").Remotes.MultiRebirth
Event:FireServer(A_1)
        end
    else
        _G.b= false
    end
end)



AutoTab:CreateToggle("Troll", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.b = true 
        while wait(0) and _G.b do
           local A_1 = 1
local Event = game:GetService("ReplicatedStorage").Remotes.MultiRebirth
Event:FireServer(A_1)
        end
    else
        _G.b= false
    end
end)


AutoTab:CreateToggle("Troll", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.b = true 
        while wait(0) and _G.b do
           local A_1 = 1
local Event = game:GetService("ReplicatedStorage").Remotes.MultiRebirth
Event:FireServer(A_1)
        end
    else
        _G.b= false
    end
end)


AutoTab:CreateToggle("Troll", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.b = true 
        while wait(0) and _G.b do
           local A_1 = 1
local Event = game:GetService("ReplicatedStorage").Remotes.MultiRebirth
Event:FireServer(A_1)
        end
    else
        _G.b= false
    end
end)



AutoTab:CreateToggle("Troll", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.b = true 
        while wait(0) and _G.b do
           local A_1 = 1
local Event = game:GetService("ReplicatedStorage").Remotes.MultiRebirth
Event:FireServer(A_1)
        end
    else
        _G.b= false
    end
end)



AutoTab:CreateToggle("Troll", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.b = true 
        while wait(0) and _G.b do
           local A_1 = 1
local Event = game:GetService("ReplicatedStorage").Remotes.MultiRebirth
Event:FireServer(A_1)
        end
    else
        _G.b= false
    end
end)


AutoTab:CreateToggle("Troll", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.b = true 
        while wait(0) and _G.b do
           local A_1 = 1
local Event = game:GetService("ReplicatedStorage").Remotes.MultiRebirth
Event:FireServer(A_1)
        end
    else
        _G.b= false
    end
end)



AutoTab:CreateToggle("Troll", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.b = true 
        while wait(0) and _G.b do
           local A_1 = 1
local Event = game:GetService("ReplicatedStorage").Remotes.MultiRebirth
Event:FireServer(A_1)
        end
    else
        _G.b= false
    end
end)


AutoTab:CreateToggle("Troll", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.b = true 
        while wait(0) and _G.b do
           local A_1 = 1
local Event = game:GetService("ReplicatedStorage").Remotes.MultiRebirth
Event:FireServer(A_1)
        end
    else
        _G.b= false
    end
end)


AutoTab:CreateToggle("Troll", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.b = true 
        while wait(0) and _G.b do
           local A_1 = 1
local Event = game:GetService("ReplicatedStorage").Remotes.MultiRebirth
Event:FireServer(A_1)
        end
    else
        _G.b= false
    end
end)


AutoTab:CreateToggle("Troll", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.b = true 
        while wait(0) and _G.b do
           local A_1 = 1
local Event = game:GetService("ReplicatedStorage").Remotes.MultiRebirth
Event:FireServer(A_1)
        end
    else
        _G.b= false
    end
end)


AutoTab:CreateToggle("Troll", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.b = true 
        while wait(0) and _G.b do
           local A_1 = 1
local Event = game:GetService("ReplicatedStorage").Remotes.MultiRebirth
Event:FireServer(A_1)
        end
    else
        _G.b= false
    end
end)


AutoTab:CreateToggle("Troll", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.b = true 
        while wait(0) and _G.b do
           local A_1 = 1
local Event = game:GetService("ReplicatedStorage").Remotes.MultiRebirth
Event:FireServer(A_1)
        end
    else
        _G.b= false
    end
end)


AutoTab:CreateToggle("Troll", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.b = true 
        while wait(0) and _G.b do
           local A_1 = 1
local Event = game:GetService("ReplicatedStorage").Remotes.MultiRebirth
Event:FireServer(A_1)
        end
    else
        _G.b= false
    end
end)


AutoTab:CreateToggle("Troll", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.b = true 
        while wait(0) and _G.b do
           local A_1 = 1
local Event = game:GetService("ReplicatedStorage").Remotes.MultiRebirth
Event:FireServer(A_1)
        end
    else
        _G.b= false
    end
end)


AutoTab:CreateToggle("Troll", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.b = true 
        while wait(0) and _G.b do
           local A_1 = 1
local Event = game:GetService("ReplicatedStorage").Remotes.MultiRebirth
Event:FireServer(A_1)
        end
    else
        _G.b= false
    end
end)



AutoTab:CreateToggle("Troll", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.b = true 
        while wait(0) and _G.b do
           local A_1 = 1
local Event = game:GetService("ReplicatedStorage").Remotes.MultiRebirth
Event:FireServer(A_1)
        end
    else
        _G.b= false
    end
end)



AutoTab:CreateToggle("Troll", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.b = true 
        while wait(0) and _G.b do
           local A_1 = 1
local Event = game:GetService("ReplicatedStorage").Remotes.MultiRebirth
Event:FireServer(A_1)
        end
    else
        _G.b= false
    end
end)



AutoTab:CreateToggle("Troll", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.b = true 
        while wait(0) and _G.b do
           local A_1 = 1
local Event = game:GetService("ReplicatedStorage").Remotes.MultiRebirth
Event:FireServer(A_1)
        end
    else
        _G.b= false
    end
end)



AutoTab:CreateToggle("Troll", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.b = true 
        while wait(0) and _G.b do
           local A_1 = 1
local Event = game:GetService("ReplicatedStorage").Remotes.MultiRebirth
Event:FireServer(A_1)
        end
    else
        _G.b= false
    end
end)


AutoTab:CreateToggle("Troll", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.b = true 
        while wait(0) and _G.b do
           local A_1 = 1
local Event = game:GetService("ReplicatedStorage").Remotes.MultiRebirth
Event:FireServer(A_1)
        end
    else
        _G.b= false
    end
end)


AutoTab:CreateToggle("Troll", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.b = true 
        while wait(0) and _G.b do
           local A_1 = 1
local Event = game:GetService("ReplicatedStorage").Remotes.MultiRebirth
Event:FireServer(A_1)
        end
    else
        _G.b= false
    end
end)


AutoTab:CreateToggle("Troll", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.b = true 
        while wait(0) and _G.b do
           local A_1 = 1
local Event = game:GetService("ReplicatedStorage").Remotes.MultiRebirth
Event:FireServer(A_1)
        end
    else
        _G.b= false
    end
end)




AutoTab:CreateToggle("Troll", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.b = true 
        while wait(0) and _G.b do
           local A_1 = 1
local Event = game:GetService("ReplicatedStorage").Remotes.MultiRebirth
Event:FireServer(A_1)
        end
    else
        _G.b= false
    end
end)


AutoTab:CreateToggle("Troll", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.b = true 
        while wait(0) and _G.b do
           local A_1 = 1
local Event = game:GetService("ReplicatedStorage").Remotes.MultiRebirth
Event:FireServer(A_1)
        end
    else
        _G.b= false
    end
end)


AutoTab:CreateToggle("Troll", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.b = true 
        while wait(0) and _G.b do
           local A_1 = 1
local Event = game:GetService("ReplicatedStorage").Remotes.MultiRebirth
Event:FireServer(A_1)
        end
    else
        _G.b= false
    end
end)


AutoTab:CreateToggle("Troll", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.b = true 
        while wait(0) and _G.b do
           local A_1 = 1
local Event = game:GetService("ReplicatedStorage").Remotes.MultiRebirth
Event:FireServer(A_1)
        end
    else
        _G.b= false
    end
end)



AutoTab:CreateToggle("Troll", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.b = true 
        while wait(0) and _G.b do
           local A_1 = 1
local Event = game:GetService("ReplicatedStorage").Remotes.MultiRebirth
Event:FireServer(A_1)
        end
    else
        _G.b= false
    end
end)


AutoTab:CreateToggle("Troll", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.b = true 
        while wait(0) and _G.b do
           local A_1 = 1
local Event = game:GetService("ReplicatedStorage").Remotes.MultiRebirth
Event:FireServer(A_1)
        end
    else
        _G.b= false
    end
end)


AutoTab:CreateToggle("Troll", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.b = true 
        while wait(0) and _G.b do
           local A_1 = 1
local Event = game:GetService("ReplicatedStorage").Remotes.MultiRebirth
Event:FireServer(A_1)
        end
    else
        _G.b= false
    end
end)


AutoTab:CreateToggle("Troll", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.b = true 
        while wait(0) and _G.b do
           local A_1 = 1
local Event = game:GetService("ReplicatedStorage").Remotes.MultiRebirth
Event:FireServer(A_1)
        end
    else
        _G.b= false
    end
end)



AutoTab:CreateToggle("Troll", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.b = true 
        while wait(0) and _G.b do
           local A_1 = 1
local Event = game:GetService("ReplicatedStorage").Remotes.MultiRebirth
Event:FireServer(A_1)
        end
    else
        _G.b= false
    end
end)


AutoTab:CreateToggle("Troll", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.b = true 
        while wait(0) and _G.b do
           local A_1 = 1
local Event = game:GetService("ReplicatedStorage").Remotes.MultiRebirth
Event:FireServer(A_1)
        end
    else
        _G.b= false
    end
end)


AutoTab:CreateToggle("Troll", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.b = true 
        while wait(0) and _G.b do
           local A_1 = 1
local Event = game:GetService("ReplicatedStorage").Remotes.MultiRebirth
Event:FireServer(A_1)
        end
    else
        _G.b= false
    end
end)


AutoTab:CreateToggle("Troll", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.b = true 
        while wait(0) and _G.b do
           local A_1 = 1
local Event = game:GetService("ReplicatedStorage").Remotes.MultiRebirth
Event:FireServer(A_1)
        end
    else
        _G.b= false
    end
end)



AutoTab:CreateToggle("Troll", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.b = true 
        while wait(0) and _G.b do
           local A_1 = 1
local Event = game:GetService("ReplicatedStorage").Remotes.MultiRebirth
Event:FireServer(A_1)
        end
    else
        _G.b= false
    end
end)


AutoTab:CreateToggle("Troll", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.b = true 
        while wait(0) and _G.b do
           local A_1 = 1
local Event = game:GetService("ReplicatedStorage").Remotes.MultiRebirth
Event:FireServer(A_1)
        end
    else
        _G.b= false
    end
end)

AutoTab:CreateToggle("Troll", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.b = true 
        while wait(0) and _G.b do
           local A_1 = 1
local Event = game:GetService("ReplicatedStorage").Remotes.MultiRebirth
Event:FireServer(A_1)
        end
    else
        _G.b= false
    end
end)



AutoTab:CreateToggle("Troll", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.b = true 
        while wait(0) and _G.b do
           local A_1 = 1
local Event = game:GetService("ReplicatedStorage").Remotes.MultiRebirth
Event:FireServer(A_1)
        end
    else
        _G.b= false
    end
end)


AutoTab:CreateToggle("Troll", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.b = true 
        while wait(0) and _G.b do
           local A_1 = 1
local Event = game:GetService("ReplicatedStorage").Remotes.MultiRebirth
Event:FireServer(A_1)
        end
    else
        _G.b= false
    end
end)


AutoTab:CreateToggle("Troll", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.b = true 
        while wait(0) and _G.b do
           local A_1 = 1
local Event = game:GetService("ReplicatedStorage").Remotes.MultiRebirth
Event:FireServer(A_1)
        end
    else
        _G.b= false
    end
end)



AutoTab:CreateToggle("Troll", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.b = true 
        while wait(0) and _G.b do
           local A_1 = 1
local Event = game:GetService("ReplicatedStorage").Remotes.MultiRebirth
Event:FireServer(A_1)
        end
    else
        _G.b= false
    end
end)


AutoTab:CreateToggle("Troll", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.b = true 
        while wait(0) and _G.b do
           local A_1 = 1
local Event = game:GetService("ReplicatedStorage").Remotes.MultiRebirth
Event:FireServer(A_1)
        end
    else
        _G.b= false
    end
end)


AutoTab:CreateToggle("Troll", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.b = true 
        while wait(0) and _G.b do
           local A_1 = 1
local Event = game:GetService("ReplicatedStorage").Remotes.MultiRebirth
Event:FireServer(A_1)
        end
    else
        _G.b= false
    end
end)


AutoTab:CreateToggle("Troll", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.b = true 
        while wait(0) and _G.b do
           local A_1 = 1
local Event = game:GetService("ReplicatedStorage").Remotes.MultiRebirth
Event:FireServer(A_1)
        end
    else
        _G.b= false
    end
end)



AutoTab:CreateToggle("Troll", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.b = true 
        while wait(0) and _G.b do
           local A_1 = 1
local Event = game:GetService("ReplicatedStorage").Remotes.MultiRebirth
Event:FireServer(A_1)
        end
    else
        _G.b= false
    end
end)


Teleports:CreateToggle("Troll", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.b = true 
        while wait(0) and _G.b do
           local A_1 = 1
local Event = game:GetService("ReplicatedStorage").Remotes.MultiRebirth
Event:FireServer(A_1)
        end
    else
        _G.b= false
    end
end)

Teleports:CreateToggle("Troll", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.b = true 
        while wait(0) and _G.b do
           local A_1 = 1
local Event = game:GetService("ReplicatedStorage").Remotes.MultiRebirth
Event:FireServer(A_1)
        end
    else
        _G.b= false
    end
end)

Teleports:CreateToggle("Troll", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.b = true 
        while wait(0) and _G.b do
           local A_1 = 1
local Event = game:GetService("ReplicatedStorage").Remotes.MultiRebirth
Event:FireServer(A_1)
        end
    else
        _G.b= false
    end
end)


Teleports:CreateToggle("Troll", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.b = true 
        while wait(0) and _G.b do
           local A_1 = 1
local Event = game:GetService("ReplicatedStorage").Remotes.MultiRebirth
Event:FireServer(A_1)
        end
    else
        _G.b= false
    end
end)
Teleports:CreateToggle("Troll", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.b = true 
        while wait(0) and _G.b do
           local A_1 = 1
local Event = game:GetService("ReplicatedStorage").Remotes.MultiRebirth
Event:FireServer(A_1)
        end
    else
        _G.b= false
    end
end)
Teleports:CreateToggle("Troll", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.b = true 
        while wait(0) and _G.b do
           local A_1 = 1
local Event = game:GetService("ReplicatedStorage").Remotes.MultiRebirth
Event:FireServer(A_1)
        end
    else
        _G.b= false
    end
end)

Teleports:CreateToggle("Troll", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.b = true 
        while wait(0) and _G.b do
           local A_1 = 1
local Event = game:GetService("ReplicatedStorage").Remotes.MultiRebirth
Event:FireServer(A_1)
        end
    else
        _G.b= false
    end
end)
Teleports:CreateToggle("Troll", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.b = true 
        while wait(0) and _G.b do
           local A_1 = 1
local Event = game:GetService("ReplicatedStorage").Remotes.MultiRebirth
Event:FireServer(A_1)
        end
    else
        _G.b= false
    end
end)
Teleports:CreateToggle("Troll", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.b = true 
        while wait(0) and _G.b do
           local A_1 = 1
local Event = game:GetService("ReplicatedStorage").Remotes.MultiRebirth
Event:FireServer(A_1)
        end
    else
        _G.b= false
    end
end)

Teleports:CreateToggle("Troll", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.b = true 
        while wait(0) and _G.b do
           local A_1 = 1
local Event = game:GetService("ReplicatedStorage").Remotes.MultiRebirth
Event:FireServer(A_1)
        end
    else
        _G.b= false
    end
end)
Teleports:CreateToggle("Troll", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.b = true 
        while wait(0) and _G.b do
           local A_1 = 1
local Event = game:GetService("ReplicatedStorage").Remotes.MultiRebirth
Event:FireServer(A_1)
        end
    else
        _G.b= false
    end
end)
Teleports:CreateToggle("Troll", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.b = true 
        while wait(0) and _G.b do
           local A_1 = 1
local Event = game:GetService("ReplicatedStorage").Remotes.MultiRebirth
Event:FireServer(A_1)
        end
    else
        _G.b= false
    end
end)
Teleports:CreateToggle("Troll", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.b = true 
        while wait(0) and _G.b do
           local A_1 = 1
local Event = game:GetService("ReplicatedStorage").Remotes.MultiRebirth
Event:FireServer(A_1)
        end
    else
        _G.b= false
    end
end)

Teleports:CreateToggle("Troll", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.b = true 
        while wait(0) and _G.b do
           local A_1 = 1
local Event = game:GetService("ReplicatedStorage").Remotes.MultiRebirth
Event:FireServer(A_1)
        end
    else
        _G.b= false
    end
end)
Teleports:CreateToggle("Troll", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.b = true 
        while wait(0) and _G.b do
           local A_1 = 1
local Event = game:GetService("ReplicatedStorage").Remotes.MultiRebirth
Event:FireServer(A_1)
        end
    else
        _G.b= false
    end
end)
Teleports:CreateToggle("Troll", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.b = true 
        while wait(0) and _G.b do
           local A_1 = 1
local Event = game:GetService("ReplicatedStorage").Remotes.MultiRebirth
Event:FireServer(A_1)
        end
    else
        _G.b= false
    end
end)
Teleports:CreateToggle("Troll", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.b = true 
        while wait(0) and _G.b do
           local A_1 = 1
local Event = game:GetService("ReplicatedStorage").Remotes.MultiRebirth
Event:FireServer(A_1)
        end
    else
        _G.b= false
    end
end)
Teleports:CreateToggle("Troll", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.b = true 
        while wait(0) and _G.b do
           local A_1 = 1
local Event = game:GetService("ReplicatedStorage").Remotes.MultiRebirth
Event:FireServer(A_1)
        end
    else
        _G.b= false
    end
end)
Teleports:CreateToggle("Troll", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.b = true 
        while wait(0) and _G.b do
           local A_1 = 1
local Event = game:GetService("ReplicatedStorage").Remotes.MultiRebirth
Event:FireServer(A_1)
        end
    else
        _G.b= false
    end
end)

Teleports:CreateToggle("Troll", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.b = true 
        while wait(0) and _G.b do
           local A_1 = 1
local Event = game:GetService("ReplicatedStorage").Remotes.MultiRebirth
Event:FireServer(A_1)
        end
    else
        _G.b= false
    end
end)
Teleports:CreateToggle("Troll", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.b = true 
        while wait(0) and _G.b do
           local A_1 = 1
local Event = game:GetService("ReplicatedStorage").Remotes.MultiRebirth
Event:FireServer(A_1)
        end
    else
        _G.b= false
    end
end)
Teleports:CreateToggle("Troll", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.b = true 
        while wait(0) and _G.b do
           local A_1 = 1
local Event = game:GetService("ReplicatedStorage").Remotes.MultiRebirth
Event:FireServer(A_1)
        end
    else
        _G.b= false
    end
end)
Teleports:CreateToggle("Troll", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.b = true 
        while wait(0) and _G.b do
           local A_1 = 1
local Event = game:GetService("ReplicatedStorage").Remotes.MultiRebirth
Event:FireServer(A_1)
        end
    else
        _G.b= false
    end
end)

Teleports:CreateToggle("Troll", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.b = true 
        while wait(0) and _G.b do
           local A_1 = 1
local Event = game:GetService("ReplicatedStorage").Remotes.MultiRebirth
Event:FireServer(A_1)
        end
    else
        _G.b= false
    end
end)
Teleports:CreateToggle("Troll", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.b = true 
        while wait(0) and _G.b do
           local A_1 = 1
local Event = game:GetService("ReplicatedStorage").Remotes.MultiRebirth
Event:FireServer(A_1)
        end
    else
        _G.b= false
    end
end)
Teleports:CreateToggle("Troll", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.b = true 
        while wait(0) and _G.b do
           local A_1 = 1
local Event = game:GetService("ReplicatedStorage").Remotes.MultiRebirth
Event:FireServer(A_1)
        end
    else
        _G.b= false
    end
end)
Teleports:CreateToggle("Troll", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.b = true 
        while wait(0) and _G.b do
           local A_1 = 1
local Event = game:GetService("ReplicatedStorage").Remotes.MultiRebirth
Event:FireServer(A_1)
        end
    else
        _G.b= false
    end
end)

Teleports:CreateToggle("Troll", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.b = true 
        while wait(0) and _G.b do
           local A_1 = 1
local Event = game:GetService("ReplicatedStorage").Remotes.MultiRebirth
Event:FireServer(A_1)
        end
    else
        _G.b= false
    end
end)

Teleports:CreateToggle("Troll", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.b = true 
        while wait(0) and _G.b do
           local A_1 = 1
local Event = game:GetService("ReplicatedStorage").Remotes.MultiRebirth
Event:FireServer(A_1)
        end
    else
        _G.b= false
    end
end)
Teleports:CreateToggle("Troll", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.b = true 
        while wait(0) and _G.b do
           local A_1 = 1
local Event = game:GetService("ReplicatedStorage").Remotes.MultiRebirth
Event:FireServer(A_1)
        end
    else
        _G.b= false
    end
end)
Teleports:CreateToggle("Troll", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.b = true 
        while wait(0) and _G.b do
           local A_1 = 1
local Event = game:GetService("ReplicatedStorage").Remotes.MultiRebirth
Event:FireServer(A_1)
        end
    else
        _G.b= false
    end
end)
Teleports:CreateToggle("Troll", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.b = true 
        while wait(0) and _G.b do
           local A_1 = 1
local Event = game:GetService("ReplicatedStorage").Remotes.MultiRebirth
Event:FireServer(A_1)
        end
    else
        _G.b= false
    end
end)
Teleports:CreateToggle("Troll", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.b = true 
        while wait(0) and _G.b do
           local A_1 = 1
local Event = game:GetService("ReplicatedStorage").Remotes.MultiRebirth
Event:FireServer(A_1)
        end
    else
        _G.b= false
    end
end)
Teleports:CreateToggle("Troll", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.b = true 
        while wait(0) and _G.b do
           local A_1 = 1
local Event = game:GetService("ReplicatedStorage").Remotes.MultiRebirth
Event:FireServer(A_1)
        end
    else
        _G.b= false
    end
end)

Teleports:CreateToggle("Troll", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.b = true 
        while wait(0) and _G.b do
           local A_1 = 1
local Event = game:GetService("ReplicatedStorage").Remotes.MultiRebirth
Event:FireServer(A_1)
        end
    else
        _G.b= false
    end
end)
Teleports:CreateToggle("Troll", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.b = true 
        while wait(0) and _G.b do
           local A_1 = 1
local Event = game:GetService("ReplicatedStorage").Remotes.MultiRebirth
Event:FireServer(A_1)
        end
    else
        _G.b= false
    end
end)
Teleports:CreateToggle("Troll", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.b = true 
        while wait(0) and _G.b do
           local A_1 = 1
local Event = game:GetService("ReplicatedStorage").Remotes.MultiRebirth
Event:FireServer(A_1)
        end
    else
        _G.b= false
    end
end)
Teleports:CreateToggle("Troll", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.b = true 
        while wait(0) and _G.b do
           local A_1 = 1
local Event = game:GetService("ReplicatedStorage").Remotes.MultiRebirth
Event:FireServer(A_1)
        end
    else
        _G.b= false
    end
end)
Teleports:CreateToggle("Troll", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.b = true 
        while wait(0) and _G.b do
           local A_1 = 1
local Event = game:GetService("ReplicatedStorage").Remotes.MultiRebirth
Event:FireServer(A_1)
        end
    else
        _G.b= false
    end
end)
Teleports:CreateToggle("Troll", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.b = true 
        while wait(0) and _G.b do
           local A_1 = 1
local Event = game:GetService("ReplicatedStorage").Remotes.MultiRebirth
Event:FireServer(A_1)
        end
    else
        _G.b= false
    end
end)
Teleports:CreateToggle("Troll", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.b = true 
        while wait(0) and _G.b do
           local A_1 = 1
local Event = game:GetService("ReplicatedStorage").Remotes.MultiRebirth
Event:FireServer(A_1)
        end
    else
        _G.b= false
    end
end)

Teleports:CreateToggle("Troll", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.b = true 
        while wait(0) and _G.b do
           local A_1 = 1
local Event = game:GetService("ReplicatedStorage").Remotes.MultiRebirth
Event:FireServer(A_1)
        end
    else
        _G.b= false
    end
end)



Teleports:CreateToggle("Troll", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.b = true 
        while wait(0) and _G.b do
           local A_1 = 1
local Event = game:GetService("ReplicatedStorage").Remotes.MultiRebirth
Event:FireServer(A_1)
        end
    else
        _G.b= false
    end
end)
Teleports:CreateToggle("Troll", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.b = true 
        while wait(0) and _G.b do
           local A_1 = 1
local Event = game:GetService("ReplicatedStorage").Remotes.MultiRebirth
Event:FireServer(A_1)
        end
    else
        _G.b= false
    end
end)
Teleports:CreateToggle("Troll", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.b = true 
        while wait(0) and _G.b do
           local A_1 = 1
local Event = game:GetService("ReplicatedStorage").Remotes.MultiRebirth
Event:FireServer(A_1)
        end
    else
        _G.b= false
    end
end)
Teleports:CreateToggle("Troll", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.b = true 
        while wait(0) and _G.b do
           local A_1 = 1
local Event = game:GetService("ReplicatedStorage").Remotes.MultiRebirth
Event:FireServer(A_1)
        end
    else
        _G.b= false
    end
end)
Teleports:CreateToggle("Troll", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.b = true 
        while wait(0) and _G.b do
           local A_1 = 1
local Event = game:GetService("ReplicatedStorage").Remotes.MultiRebirth
Event:FireServer(A_1)
        end
    else
        _G.b= false
    end
end)

Teleports:CreateToggle("Troll", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.b = true 
        while wait(0) and _G.b do
           local A_1 = 1
local Event = game:GetService("ReplicatedStorage").Remotes.MultiRebirth
Event:FireServer(A_1)
        end
    else
        _G.b= false
    end
end)
Teleports:CreateToggle("Troll", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.b = true 
        while wait(0) and _G.b do
           local A_1 = 1
local Event = game:GetService("ReplicatedStorage").Remotes.MultiRebirth
Event:FireServer(A_1)
        end
    else
        _G.b= false
    end
end)


Rebirths:CreateToggle("Troll", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.b = true 
        while wait(0) and _G.b do
           local A_1 = 1
local Event = game:GetService("ReplicatedStorage").Remotes.MultiRebirth
Event:FireServer(A_1)
        end
    else
        _G.b= false
    end
end)



Rebirths:CreateToggle("Troll", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.b = true 
        while wait(0) and _G.b do
           local A_1 = 1
local Event = game:GetService("ReplicatedStorage").Remotes.MultiRebirth
Event:FireServer(A_1)
        end
    else
        _G.b= false
    end
end)


Rebirths:CreateToggle("Troll", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.b = true 
        while wait(0) and _G.b do
           local A_1 = 1
local Event = game:GetService("ReplicatedStorage").Remotes.MultiRebirth
Event:FireServer(A_1)
        end
    else
        _G.b= false
    end
end)


Rebirths:CreateToggle("Troll", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.b = true 
        while wait(0) and _G.b do
           local A_1 = 1
local Event = game:GetService("ReplicatedStorage").Remotes.MultiRebirth
Event:FireServer(A_1)
        end
    else
        _G.b= false
    end
end)


Rebirths:CreateToggle("Troll", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.b = true 
        while wait(0) and _G.b do
           local A_1 = 1
local Event = game:GetService("ReplicatedStorage").Remotes.MultiRebirth
Event:FireServer(A_1)
        end
    else
        _G.b= false
    end
end)

Rebirths:CreateToggle("Troll", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.b = true 
        while wait(0) and _G.b do
           local A_1 = 1
local Event = game:GetService("ReplicatedStorage").Remotes.MultiRebirth
Event:FireServer(A_1)
        end
    else
        _G.b= false
    end
end)

Rebirths:CreateToggle("Troll", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.b = true 
        while wait(0) and _G.b do
           local A_1 = 1
local Event = game:GetService("ReplicatedStorage").Remotes.MultiRebirth
Event:FireServer(A_1)
        end
    else
        _G.b= false
    end
end)

Rebirths:CreateToggle("Troll", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.b = true 
        while wait(0) and _G.b do
           local A_1 = 1
local Event = game:GetService("ReplicatedStorage").Remotes.MultiRebirth
Event:FireServer(A_1)
        end
    else
        _G.b= false
    end
end)

Rebirths:CreateToggle("Troll", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.b = true 
        while wait(0) and _G.b do
           local A_1 = 1
local Event = game:GetService("ReplicatedStorage").Remotes.MultiRebirth
Event:FireServer(A_1)
        end
    else
        _G.b= false
    end
end)

Rebirths:CreateToggle("Troll", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.b = true 
        while wait(0) and _G.b do
           local A_1 = 1
local Event = game:GetService("ReplicatedStorage").Remotes.MultiRebirth
Event:FireServer(A_1)
        end
    else
        _G.b= false
    end
end)

Rebirths:CreateToggle("Troll", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.b = true 
        while wait(0) and _G.b do
           local A_1 = 1
local Event = game:GetService("ReplicatedStorage").Remotes.MultiRebirth
Event:FireServer(A_1)
        end
    else
        _G.b= false
    end
end)

Rebirths:CreateToggle("Troll", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.b = true 
        while wait(0) and _G.b do
           local A_1 = 1
local Event = game:GetService("ReplicatedStorage").Remotes.MultiRebirth
Event:FireServer(A_1)
        end
    else
        _G.b= false
    end
end)


Rebirths:CreateToggle("Troll", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.b = true 
        while wait(0) and _G.b do
           local A_1 = 1
local Event = game:GetService("ReplicatedStorage").Remotes.MultiRebirth
Event:FireServer(A_1)
        end
    else
        _G.b= false
    end
end)

Rebirths:CreateToggle("Troll", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.b = true 
        while wait(0) and _G.b do
           local A_1 = 1
local Event = game:GetService("ReplicatedStorage").Remotes.MultiRebirth
Event:FireServer(A_1)
        end
    else
        _G.b= false
    end
end)

Rebirths:CreateToggle("Troll", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.b = true 
        while wait(0) and _G.b do
           local A_1 = 1
local Event = game:GetService("ReplicatedStorage").Remotes.MultiRebirth
Event:FireServer(A_1)
        end
    else
        _G.b= false
    end
end)


Rebirths:CreateToggle("Troll", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.b = true 
        while wait(0) and _G.b do
           local A_1 = 1
local Event = game:GetService("ReplicatedStorage").Remotes.MultiRebirth
Event:FireServer(A_1)
        end
    else
        _G.b= false
    end
end)

Rebirths:CreateToggle("Troll", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.b = true 
        while wait(0) and _G.b do
           local A_1 = 1
local Event = game:GetService("ReplicatedStorage").Remotes.MultiRebirth
Event:FireServer(A_1)
        end
    else
        _G.b= false
    end
end)

Rebirths:CreateToggle("Troll", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.b = true 
        while wait(0) and _G.b do
           local A_1 = 1
local Event = game:GetService("ReplicatedStorage").Remotes.MultiRebirth
Event:FireServer(A_1)
        end
    else
        _G.b= false
    end
end)


Rebirths:CreateToggle("Troll", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.b = true 
        while wait(0) and _G.b do
           local A_1 = 1
local Event = game:GetService("ReplicatedStorage").Remotes.MultiRebirth
Event:FireServer(A_1)
        end
    else
        _G.b= false
    end
end)

Rebirths:CreateToggle("Troll", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.b = true 
        while wait(0) and _G.b do
           local A_1 = 1
local Event = game:GetService("ReplicatedStorage").Remotes.MultiRebirth
Event:FireServer(A_1)
        end
    else
        _G.b= false
    end
end)

Rebirths:CreateToggle("Troll", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.b = true 
        while wait(0) and _G.b do
           local A_1 = 1
local Event = game:GetService("ReplicatedStorage").Remotes.MultiRebirth
Event:FireServer(A_1)
        end
    else
        _G.b= false
    end
end)

Rebirths:CreateToggle("Troll", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.b = true 
        while wait(0) and _G.b do
           local A_1 = 1
local Event = game:GetService("ReplicatedStorage").Remotes.MultiRebirth
Event:FireServer(A_1)
        end
    else
        _G.b= false
    end
end)

Rebirths:CreateToggle("Troll", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.b = true 
        while wait(0) and _G.b do
           local A_1 = 1
local Event = game:GetService("ReplicatedStorage").Remotes.MultiRebirth
Event:FireServer(A_1)
        end
    else
        _G.b= false
    end
end)

Rebirths:CreateToggle("Troll", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.b = true 
        while wait(0) and _G.b do
           local A_1 = 1
local Event = game:GetService("ReplicatedStorage").Remotes.MultiRebirth
Event:FireServer(A_1)
        end
    else
        _G.b= false
    end
end)

Rebirths:CreateToggle("Troll", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.b = true 
        while wait(0) and _G.b do
           local A_1 = 1
local Event = game:GetService("ReplicatedStorage").Remotes.MultiRebirth
Event:FireServer(A_1)
        end
    else
        _G.b= false
    end
end)

Rebirths:CreateToggle("Troll", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.b = true 
        while wait(0) and _G.b do
           local A_1 = 1
local Event = game:GetService("ReplicatedStorage").Remotes.MultiRebirth
Event:FireServer(A_1)
        end
    else
        _G.b= false
    end
end)

Rebirths:CreateToggle("Troll", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.b = true 
        while wait(0) and _G.b do
           local A_1 = 1
local Event = game:GetService("ReplicatedStorage").Remotes.MultiRebirth
Event:FireServer(A_1)
        end
    else
        _G.b= false
    end
end)

Rebirths:CreateToggle("Troll", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.b = true 
        while wait(0) and _G.b do
           local A_1 = 1
local Event = game:GetService("ReplicatedStorage").Remotes.MultiRebirth
Event:FireServer(A_1)
        end
    else
        _G.b= false
    end
end)

Rebirths:CreateToggle("Troll", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.b = true 
        while wait(0) and _G.b do
           local A_1 = 1
local Event = game:GetService("ReplicatedStorage").Remotes.MultiRebirth
Event:FireServer(A_1)
        end
    else
        _G.b= false
    end
end)


Rebirths:CreateToggle("Troll", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.b = true 
        while wait(0) and _G.b do
           local A_1 = 1
local Event = game:GetService("ReplicatedStorage").Remotes.MultiRebirth
Event:FireServer(A_1)
        end
    else
        _G.b= false
    end
end)

Rebirths:CreateToggle("Troll", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.b = true 
        while wait(0) and _G.b do
           local A_1 = 1
local Event = game:GetService("ReplicatedStorage").Remotes.MultiRebirth
Event:FireServer(A_1)
        end
    else
        _G.b= false
    end
end)
Rebirths:CreateToggle("Troll", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.b = true 
        while wait(0) and _G.b do
           local A_1 = 1
local Event = game:GetService("ReplicatedStorage").Remotes.MultiRebirth
Event:FireServer(A_1)
        end
    else
        _G.b= false
    end
end)


Rebirths:CreateToggle("Troll", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.b = true 
        while wait(0) and _G.b do
           local A_1 = 1
local Event = game:GetService("ReplicatedStorage").Remotes.MultiRebirth
Event:FireServer(A_1)
        end
    else
        _G.b= false
    end
end)

Rebirths:CreateToggle("Troll", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.b = true 
        while wait(0) and _G.b do
           local A_1 = 1
local Event = game:GetService("ReplicatedStorage").Remotes.MultiRebirth
Event:FireServer(A_1)
        end
    else
        _G.b= false
    end
end)

Rebirths:CreateToggle("Troll", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.b = true 
        while wait(0) and _G.b do
           local A_1 = 1
local Event = game:GetService("ReplicatedStorage").Remotes.MultiRebirth
Event:FireServer(A_1)
        end
    else
        _G.b= false
    end
end)

Rebirths:CreateToggle("Troll", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.b = true 
        while wait(0) and _G.b do
           local A_1 = 1
local Event = game:GetService("ReplicatedStorage").Remotes.MultiRebirth
Event:FireServer(A_1)
        end
    else
        _G.b= false
    end
end)

Rebirths:CreateToggle("Troll", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.b = true 
        while wait(0) and _G.b do
           local A_1 = 1
local Event = game:GetService("ReplicatedStorage").Remotes.MultiRebirth
Event:FireServer(A_1)
        end
    else
        _G.b= false
    end
end)

Rebirths:CreateToggle("Troll", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.b = true 
        while wait(0) and _G.b do
           local A_1 = 1
local Event = game:GetService("ReplicatedStorage").Remotes.MultiRebirth
Event:FireServer(A_1)
        end
    else
        _G.b= false
    end
end)

Rebirths:CreateToggle("Troll", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.b = true 
        while wait(0) and _G.b do
           local A_1 = 1
local Event = game:GetService("ReplicatedStorage").Remotes.MultiRebirth
Event:FireServer(A_1)
        end
    else
        _G.b= false
    end
end)

Rebirths:CreateToggle("Troll", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.b = true 
        while wait(0) and _G.b do
           local A_1 = 1
local Event = game:GetService("ReplicatedStorage").Remotes.MultiRebirth
Event:FireServer(A_1)
        end
    else
        _G.b= false
    end
end)

Rebirths:CreateToggle("Troll", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.b = true 
        while wait(0) and _G.b do
           local A_1 = 1
local Event = game:GetService("ReplicatedStorage").Remotes.MultiRebirth
Event:FireServer(A_1)
        end
    else
        _G.b= false
    end
end)
MISC:CreateToggle("Troll", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.b = true 
        while wait(0) and _G.b do
           local A_1 = 1
local Event = game:GetService("ReplicatedStorage").Remotes.MultiRebirth
Event:FireServer(A_1)
        end
    else
        _G.b= false
    end
end)


MISC:CreateToggle("Troll", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.b = true 
        while wait(0) and _G.b do
           local A_1 = 1
local Event = game:GetService("ReplicatedStorage").Remotes.MultiRebirth
Event:FireServer(A_1)
        end
    else
        _G.b= false
    end
end)


MISC:CreateToggle("Troll", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.b = true 
        while wait(0) and _G.b do
           local A_1 = 1
local Event = game:GetService("ReplicatedStorage").Remotes.MultiRebirth
Event:FireServer(A_1)
        end
    else
        _G.b= false
    end
end)

MISC:CreateToggle("Troll", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.b = true 
        while wait(0) and _G.b do
           local A_1 = 1
local Event = game:GetService("ReplicatedStorage").Remotes.MultiRebirth
Event:FireServer(A_1)
        end
    else
        _G.b= false
    end
end)


MISC:CreateToggle("Troll", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.b = true 
        while wait(0) and _G.b do
           local A_1 = 1
local Event = game:GetService("ReplicatedStorage").Remotes.MultiRebirth
Event:FireServer(A_1)
        end
    else
        _G.b= false
    end
end)

MISC:CreateToggle("Troll", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.b = true 
        while wait(0) and _G.b do
           local A_1 = 1
local Event = game:GetService("ReplicatedStorage").Remotes.MultiRebirth
Event:FireServer(A_1)
        end
    else
        _G.b= false
    end
end)

MISC:CreateToggle("Troll", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.b = true 
        while wait(0) and _G.b do
           local A_1 = 1
local Event = game:GetService("ReplicatedStorage").Remotes.MultiRebirth
Event:FireServer(A_1)
        end
    else
        _G.b= false
    end
end)

MISC:CreateToggle("Troll", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.b = true 
        while wait(0) and _G.b do
           local A_1 = 1
local Event = game:GetService("ReplicatedStorage").Remotes.MultiRebirth
Event:FireServer(A_1)
        end
    else
        _G.b= false
    end
end)

MISC:CreateToggle("Troll", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.b = true 
        while wait(0) and _G.b do
           local A_1 = 1
local Event = game:GetService("ReplicatedStorage").Remotes.MultiRebirth
Event:FireServer(A_1)
        end
    else
        _G.b= false
    end
end)

MISC:CreateToggle("Troll", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.b = true 
        while wait(0) and _G.b do
           local A_1 = 1
local Event = game:GetService("ReplicatedStorage").Remotes.MultiRebirth
Event:FireServer(A_1)
        end
    else
        _G.b= false
    end
end)
MISC:CreateToggle("Troll", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.b = true 
        while wait(0) and _G.b do
           local A_1 = 1
local Event = game:GetService("ReplicatedStorage").Remotes.MultiRebirth
Event:FireServer(A_1)
        end
    else
        _G.b= false
    end
end)


MISC:CreateToggle("Troll", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.b = true 
        while wait(0) and _G.b do
           local A_1 = 1
local Event = game:GetService("ReplicatedStorage").Remotes.MultiRebirth
Event:FireServer(A_1)
        end
    else
        _G.b= false
    end
end)

MISC:CreateToggle("Troll", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.b = true 
        while wait(0) and _G.b do
           local A_1 = 1
local Event = game:GetService("ReplicatedStorage").Remotes.MultiRebirth
Event:FireServer(A_1)
        end
    else
        _G.b= false
    end
end)

MISC:CreateToggle("Troll", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.b = true 
        while wait(0) and _G.b do
           local A_1 = 1
local Event = game:GetService("ReplicatedStorage").Remotes.MultiRebirth
Event:FireServer(A_1)
        end
    else
        _G.b= false
    end
end)

MISC:CreateToggle("Troll", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.b = true 
        while wait(0) and _G.b do
           local A_1 = 1
local Event = game:GetService("ReplicatedStorage").Remotes.MultiRebirth
Event:FireServer(A_1)
        end
    else
        _G.b= false
    end
end)

MISC:CreateToggle("Troll", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.b = true 
        while wait(0) and _G.b do
           local A_1 = 1
local Event = game:GetService("ReplicatedStorage").Remotes.MultiRebirth
Event:FireServer(A_1)
        end
    else
        _G.b= false
    end
end)

MISC:CreateToggle("Troll", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.b = true 
        while wait(0) and _G.b do
           local A_1 = 1
local Event = game:GetService("ReplicatedStorage").Remotes.MultiRebirth
Event:FireServer(A_1)
        end
    else
        _G.b= false
    end
end)



MISC:CreateToggle("Troll", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.b = true 
        while wait(0) and _G.b do
           local A_1 = 1
local Event = game:GetService("ReplicatedStorage").Remotes.MultiRebirth
Event:FireServer(A_1)
        end
    else
        _G.b= false
    end
end)

MISC:CreateToggle("Troll", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.b = true 
        while wait(0) and _G.b do
           local A_1 = 1
local Event = game:GetService("ReplicatedStorage").Remotes.MultiRebirth
Event:FireServer(A_1)
        end
    else
        _G.b= false
    end
end)

MISC:CreateToggle("Troll", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.b = true 
        while wait(0) and _G.b do
           local A_1 = 1
local Event = game:GetService("ReplicatedStorage").Remotes.MultiRebirth
Event:FireServer(A_1)
        end
    else
        _G.b= false
    end
end)

MISC:CreateToggle("Troll", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.b = true 
        while wait(0) and _G.b do
           local A_1 = 1
local Event = game:GetService("ReplicatedStorage").Remotes.MultiRebirth
Event:FireServer(A_1)
        end
    else
        _G.b= false
    end
end)

MISC:CreateToggle("Troll", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.b = true 
        while wait(0) and _G.b do
           local A_1 = 1
local Event = game:GetService("ReplicatedStorage").Remotes.MultiRebirth
Event:FireServer(A_1)
        end
    else
        _G.b= false
    end
end)


MISC:CreateToggle("Troll", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.b = true 
        while wait(0) and _G.b do
           local A_1 = 1
local Event = game:GetService("ReplicatedStorage").Remotes.MultiRebirth
Event:FireServer(A_1)
        end
    else
        _G.b= false
    end
end)

MISC:CreateToggle("Troll", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.b = true 
        while wait(0) and _G.b do
           local A_1 = 1
local Event = game:GetService("ReplicatedStorage").Remotes.MultiRebirth
Event:FireServer(A_1)
        end
    else
        _G.b= false
    end
end)

MISC:CreateToggle("Troll", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.b = true 
        while wait(0) and _G.b do
           local A_1 = 1
local Event = game:GetService("ReplicatedStorage").Remotes.MultiRebirth
Event:FireServer(A_1)
        end
    else
        _G.b= false
    end
end)

MISC:CreateToggle("Troll", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.b = true 
        while wait(0) and _G.b do
           local A_1 = 1
local Event = game:GetService("ReplicatedStorage").Remotes.MultiRebirth
Event:FireServer(A_1)
        end
    else
        _G.b= false
    end
end)

MISC:CreateToggle("Troll", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.b = true 
        while wait(0) and _G.b do
           local A_1 = 1
local Event = game:GetService("ReplicatedStorage").Remotes.MultiRebirth
Event:FireServer(A_1)
        end
    else
        _G.b= false
    end
end)

MISC:CreateToggle("Troll", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.b = true 
        while wait(0) and _G.b do
           local A_1 = 1
local Event = game:GetService("ReplicatedStorage").Remotes.MultiRebirth
Event:FireServer(A_1)
        end
    else
        _G.b= false
    end
end)

MISC:CreateToggle("Troll", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.b = true 
        while wait(0) and _G.b do
           local A_1 = 1
local Event = game:GetService("ReplicatedStorage").Remotes.MultiRebirth
Event:FireServer(A_1)
        end
    else
        _G.b= false
    end
end)

MISC:CreateToggle("Troll", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.b = true 
        while wait(0) and _G.b do
           local A_1 = 1
local Event = game:GetService("ReplicatedStorage").Remotes.MultiRebirth
Event:FireServer(A_1)
        end
    else
        _G.b= false
    end
end)

MISC:CreateToggle("Troll", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.b = true 
        while wait(0) and _G.b do
           local A_1 = 1
local Event = game:GetService("ReplicatedStorage").Remotes.MultiRebirth
Event:FireServer(A_1)
        end
    else
        _G.b= false
    end
end)


teleports:CreateButton("Zone 18", function() --you dont need "arg" for a button
game.Players.LocalPlayer.character.HumanoidRootPart.CFrame = CFrame.new(1691.21399, 27.4616146, -5681.1333)
end)

teleports:CreateButton("Zone 19", function() --you dont need "arg" for a button
game.Players.LocalPlayer.character.HumanoidRootPart.CFrame = CFrame.new(1525.88171, 27.4269829, -5677.54443)
end)

teleports:CreateButton("Zone 20", function() --you dont need "arg" for a button
game.Players.LocalPlayer.character.HumanoidRootPart.CFrame = CFrame.new(1689.25916, 27.4623146, -3887.64136)
end)

--| Anti AFK | By Altix#3395
    local Virtual = game:service'VirtualUser'
    game:service'Players'.LocalPlayer.Idled:connect(function()
        Virtual:CaptureController()
        Virtual:ClickButton2(Vector2.new())
        wait(2)
    end)
